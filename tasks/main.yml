---
- name: Gather Keycloak PVCs
  k8s_info:
    kind: PersistentVolumeClaim
    namespace: "{{ namespace }}"
    label_selectors:
      - "postgres-operator.crunchydata.com/cluster=keycloak"
  register: keycloak_pvcs

- name: Patch all Keycloak PVCs to increase storage
  k8s:
    state: present
    namespace: "{{ namespace }}"
    kind: PersistentVolumeClaim
    name: "{{ item.metadata.name }}"
    merge_type:
      - strategic-merge
    definition:
      spec:
        resources:
          requests:
            storage: "{{ new_size }}"
  loop: "{{ keycloak_pvcs.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"

- name: Wait for PVC resize to reflect
  k8s_info:
    kind: PersistentVolumeClaim
    namespace: "{{ namespace }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ keycloak_pvcs.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  register: pvc_info
  until: pvc_info.resources[0].status.capacity.storage == new_size
  retries: 15
  delay: 10

- name: Gather Keycloak pods
  k8s_info:
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
      - "postgres-operator.crunchydata.com/cluster=keycloak"
  register: keycloak_pods

- name: Delete Keycloak pods to pick up new PVC size
  k8s:
    state: absent
    namespace: "{{ namespace }}"
    kind: Pod
    name: "{{ item.metadata.name }}"
  loop: "{{ keycloak_pods.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"

- name: Wait for pods to be running again
  k8s_info:
    kind: Pod
    namespace: "{{ namespace }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ keycloak_pods.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  register: pod_info
  until: pod_info.resources[0].status.phase == "Running"
  retries: 20
  delay: 15

- name: Show final PVC and pod status
  block:
    - name: PVC status
      command: oc get pvc -n {{ namespace }}
    - name: Pods status
      command: oc get pods -n {{ namespace }}
